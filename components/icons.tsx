import * as React from "react";

// TODO: remove unused icons
import { IconSvgProps } from "@/types";

export const Logo: React.FC<IconSvgProps> = ({
  size = 36,
  width,
  height,
  ...props
}) => (
  <svg
    fill="none"
    height={size || height}
    viewBox="0 0 32 32"
    width={size || width}
    {...props}
  >
    <path
      clipRule="evenodd"
      d="M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z"
      fill="currentColor"
      fillRule="evenodd"
    />
  </svg>
);

export const DiscordIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M14.82 4.26a10.14 10.14 0 0 0-.53 1.1 14.66 14.66 0 0 0-4.58 0 10.14 10.14 0 0 0-.53-1.1 16 16 0 0 0-4.13 1.3 17.33 17.33 0 0 0-3 11.59 16.6 16.6 0 0 0 5.07 2.59A12.89 12.89 0 0 0 8.23 18a9.65 9.65 0 0 1-1.71-.83 3.39 3.39 0 0 0 .42-.33 11.66 11.66 0 0 0 10.12 0q.21.18.42.33a10.84 10.84 0 0 1-1.71.84 12.41 12.41 0 0 0 1.08 1.78 16.44 16.44 0 0 0 5.06-2.59 17.22 17.22 0 0 0-3-11.59 16.09 16.09 0 0 0-4.09-1.35zM8.68 14.81a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.93 1.93 0 0 1 1.8 2 1.93 1.93 0 0 1-1.8 2zm6.64 0a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.92 1.92 0 0 1 1.8 2 1.92 1.92 0 0 1-1.8 2z"
        fill="currentColor"
      />
    </svg>
  );
};

export const TwitterIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M19.633 7.997c.013.175.013.349.013.523 0 5.325-4.053 11.461-11.46 11.461-2.282 0-4.402-.661-6.186-1.809.324.037.636.05.973.05a8.07 8.07 0 0 0 5.001-1.721 4.036 4.036 0 0 1-3.767-2.793c.249.037.499.062.761.062.361 0 .724-.05 1.061-.137a4.027 4.027 0 0 1-3.23-3.953v-.05c.537.299 1.16.486 1.82.511a4.022 4.022 0 0 1-1.796-3.354c0-.748.199-1.434.548-2.032a11.457 11.457 0 0 0 8.306 4.215c-.062-.3-.1-.611-.1-.923a4.026 4.026 0 0 1 4.028-4.028c1.16 0 2.207.486 2.943 1.272a7.957 7.957 0 0 0 2.556-.973 4.02 4.02 0 0 1-1.771 2.22 8.073 8.073 0 0 0 2.319-.624 8.645 8.645 0 0 1-2.019 2.083z"
        fill="currentColor"
      />
    </svg>
  );
};

export const GithubIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        clipRule="evenodd"
        d="M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 0 1 2.496-.336 9.554 9.554 0 0 1 2.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z"
        fill="currentColor"
        fillRule="evenodd"
      />
    </svg>
  );
};

export const MoonFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z"
      fill="currentColor"
    />
  </svg>
);

export const SunFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <g fill="currentColor">
      <path d="M19 12a7 7 0 11-7-7 7 7 0 017 7z" />
      <path d="M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z" />
    </g>
  </svg>
);

export const HeartFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z"
      fill="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);

export const SearchIcon = (props: IconSvgProps) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 24 24"
    width="1em"
    {...props}
  >
    <path
      d="M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
    <path
      d="M22 22L20 20"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
  </svg>
);

export const Icon = ({
  viewBox,
  d,
  color,
  strokeWidth = 1.5,
}: {
  viewBox: string;
  d: string[];
  color: string;
  strokeWidth?: number;
}) => (
  <svg
    aria-hidden
    fill="none"
    height="16px"
    viewBox={`0 0 ${viewBox}`}
    width="16px"
    xmlns="http://www.w3.org/2000/svg"
  >
    {d.map((dstr, i) => (
      <path
        key={i}
        d={dstr}
        stroke={color}
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={strokeWidth}
      />
    ))}
  </svg>
);

export const menuIcons = {
  home: {
    viewBox: "14 14",
    d: [
      "M8.625 12.8747V7.87467C8.625 7.70891 8.55915 7.54994 8.44194 7.43273C8.32473 7.31552 8.16576 7.24967 8 7.24967H5.5C5.33424 7.24967 5.17527 7.31552 5.05806 7.43273C4.94085 7.54994 4.875 7.70891 4.875 7.87467V12.8747M1.125 5.99967C1.12496 5.81784 1.16458 5.63819 1.24112 5.47325C1.31765 5.30831 1.42925 5.16205 1.56813 5.04467L5.94312 1.2953C6.16874 1.10462 6.4546 1 6.75 1C7.0454 1 7.33126 1.10462 7.55688 1.2953L11.9319 5.04467C12.0708 5.16205 12.1823 5.30831 12.2589 5.47325C12.3354 5.63819 12.375 5.81784 12.375 5.99967V11.6247C12.375 11.9562 12.2433 12.2741 12.0089 12.5086C11.7745 12.743 11.4565 12.8747 11.125 12.8747H2.375C2.04348 12.8747 1.72554 12.743 1.49112 12.5086C1.2567 12.2741 1.125 11.9562 1.125 11.6247V5.99967Z",
    ],
  },
  people: {
    viewBox: "15 15",
    d: [
      "M10.125 13.125V11.875C10.125 11.212 9.86161 10.5761 9.39277 10.1072C8.92393 9.63839 8.28804 9.375 7.625 9.375H3.875C3.21196 9.375 2.57607 9.63839 2.10723 10.1072C1.63839 10.5761 1.375 11.212 1.375 11.875V13.125M13.875 13.125V11.875C13.8746 11.3211 13.6902 10.783 13.3509 10.3452C13.0115 9.90741 12.5363 9.59473 12 9.45625M10.125 1.95625C10.6628 2.09394 11.1394 2.40669 11.4798 2.84519C11.8202 3.2837 12.0049 3.82302 12.0049 4.37813C12.0049 4.93323 11.8202 5.47255 11.4798 5.91106C11.1394 6.34956 10.6628 6.66231 10.125 6.8M8.25 4.375C8.25 5.75571 7.13071 6.875 5.75 6.875C4.36929 6.875 3.25 5.75571 3.25 4.375C3.25 2.99429 4.36929 1.875 5.75 1.875C7.13071 1.875 8.25 2.99429 8.25 4.375Z",
    ],
  },
  strategies: {
    viewBox: "16 14",
    d: [
      "M8.125 9.125V12.25M10.625 7.875V12.25M13.125 5.375V12.25M14.375 1L8.97125 6.40375C8.94222 6.43285 8.90774 6.45594 8.86977 6.47169C8.83181 6.48745 8.7911 6.49556 8.75 6.49556C8.7089 6.49556 8.66819 6.48745 8.63023 6.47169C8.59226 6.45594 8.55778 6.43285 8.52875 6.40375L6.47125 4.34625C6.41265 4.28767 6.33318 4.25475 6.25031 4.25475C6.16745 4.25475 6.08798 4.28767 6.02938 4.34625L1.875 8.5M3.125 10.375V12.25M5.625 7.875V12.25",
    ],
  },
  pricing: {
    viewBox: "17 17",
    d: [
      "M11.416 1.66724V4.00057M12.5833 2.83325H10.25M6.17733 2.14151C6.20232 2.0077 6.27333 1.88684 6.37805 1.79987C6.48277 1.71289 6.61462 1.66528 6.75075 1.66528C6.88687 1.66528 7.01872 1.71289 7.12344 1.79987C7.22816 1.88684 7.29917 2.0077 7.32416 2.14151L7.93725 5.38368C7.98079 5.61418 8.09281 5.82621 8.25868 5.99208C8.42455 6.15795 8.63658 6.26997 8.86708 6.31351L12.1092 6.9266C12.2431 6.95159 12.3639 7.0226 12.4509 7.12732C12.5379 7.23204 12.5855 7.36388 12.5855 7.50001C12.5855 7.63614 12.5379 7.76798 12.4509 7.87271C12.3639 7.97743 12.2431 8.04844 12.1092 8.07343L8.86708 8.68651C8.63658 8.73006 8.42455 8.84207 8.25868 9.00795C8.09281 9.17382 7.98079 9.38584 7.93725 9.61635L7.32416 12.8585C7.29917 12.9923 7.22816 13.1132 7.12344 13.2002C7.01872 13.2871 6.88687 13.3347 6.75075 13.3347C6.61462 13.3347 6.48277 13.2871 6.37805 13.2002C6.27333 13.1132 6.20232 12.9923 6.17733 12.8585L5.56425 9.61635C5.5207 9.38584 5.40868 9.17382 5.24281 9.00795C5.07694 8.84207 4.86492 8.73006 4.63441 8.68651L1.39225 8.07343C1.25843 8.04844 1.13757 7.97743 1.0506 7.87271C0.963625 7.76798 0.916016 7.63614 0.916016 7.50001C0.916016 7.36388 0.963625 7.23204 1.0506 7.12732C1.13757 7.0226 1.25843 6.95159 1.39225 6.9266L4.63441 6.31351C4.86492 6.26997 5.07694 6.15795 5.24281 5.99208C5.40868 5.82621 5.5207 5.61418 5.56425 5.38368L6.17733 2.14151ZM3.24935 12.1669C3.24935 12.8112 2.72701 13.3336 2.08268 13.3336C1.43835 13.3336 0.916016 12.8112 0.916016 12.1669C0.916016 11.5226 1.43835 11.0002 2.08268 11.0002C2.72701 11.0002 3.24935 11.5226 3.24935 12.1669Z",
    ],
  },
  news: {
    viewBox: "15 15",
    d: [
      "M9.5 11H6.375M11.375 8.5H6.375M2.625 13.5H12.625C12.9565 13.5 13.2745 13.3683 13.5089 13.1339C13.7433 12.8995 13.875 12.5815 13.875 12.25V2.25C13.875 1.91848 13.7433 1.60054 13.5089 1.36612C13.2745 1.1317 12.9565 1 12.625 1H5.125C4.79348 1 4.47554 1.1317 4.24112 1.36612C4.0067 1.60054 3.875 1.91848 3.875 2.25V12.25C3.875 12.5815 3.7433 12.8995 3.50888 13.1339C3.27446 13.3683 2.95652 13.5 2.625 13.5ZM2.625 13.5C2.29348 13.5 1.97554 13.3683 1.74112 13.1339C1.5067 12.8995 1.375 12.5815 1.375 12.25V6.625C1.375 6.29348 1.5067 5.97554 1.74112 5.74112C1.97554 5.5067 2.29348 5.375 2.625 5.375H3.875M7 3.5H10.75C11.0952 3.5 11.375 3.77982 11.375 4.125V5.375C11.375 5.72018 11.0952 6 10.75 6H7C6.65482 6 6.375 5.72018 6.375 5.375V4.125C6.375 3.77982 6.65482 3.5 7 3.5Z",
    ],
  },
  account: {
    viewBox: "18 17",
    d: [
      "M5.625 14.9965V13.75C5.625 13.3522 5.78304 12.9706 6.06434 12.6893C6.34564 12.408 6.72718 12.25 7.125 12.25H11.625C12.0228 12.25 12.4044 12.408 12.6857 12.6893C12.967 12.9706 13.125 13.3522 13.125 13.75V14.9965M16.875 8.5C16.875 12.6421 13.5171 16 9.375 16C5.23286 16 1.875 12.6421 1.875 8.5C1.875 4.35786 5.23286 1 9.375 1C13.5171 1 16.875 4.35786 16.875 8.5ZM11.625 7C11.625 8.24264 10.6176 9.25 9.375 9.25C8.13236 9.25 7.125 8.24264 7.125 7C7.125 5.75736 8.13236 4.75 9.375 4.75C10.6176 4.75 11.625 5.75736 11.625 7Z",
    ],
  },
  exit: {
    viewBox: "15 15",
    d: [
      "M2.03829 9.32875C1.95665 9.41824 1.90276 9.52953 1.8832 9.64907C1.86364 9.76862 1.87924 9.89128 1.92811 10.0021C1.97698 10.113 2.057 10.2072 2.15845 10.2734C2.2599 10.3396 2.37841 10.3749 2.49954 10.375H12.4995C12.6207 10.375 12.7392 10.3399 12.8407 10.2738C12.9422 10.2077 13.0224 10.1136 13.0713 10.0028C13.1203 9.89205 13.1361 9.76943 13.1167 9.64987C13.0973 9.53031 13.0436 9.41896 12.962 9.32937C12.1308 8.4725 11.2495 7.56188 11.2495 4.75C11.2495 3.75544 10.8545 2.80161 10.1512 2.09835C9.44793 1.39509 8.49411 1 7.49954 1C6.50498 1 5.55115 1.39509 4.84789 2.09835C4.14463 2.80161 3.74954 3.75544 3.74954 4.75C3.74954 7.56188 2.86767 8.4725 2.03829 9.32875Z",
      "M6.41797 13.375C6.52768 13.565 6.68548 13.7228 6.8755 13.8325C7.06551 13.9422 7.28106 13.9999 7.50047 13.9999C7.71988 13.9999 7.93542 13.9422 8.12544 13.8325C8.31546 13.7228 8.47325 13.565 8.58297 13.375",
    ],
    strokeWidth: 1.75,
  },
};

export const LogoFTI = ({ ...props }) => (
  <svg
    className="m-auto flex"
    fill="none"
    height="98"
    viewBox="0 0 200 98"
    width="200"
    {...props}
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M25.4475 39.2549H63.6187L50.6731 61.2157H25.4475V98H0V0H74.7007L61.754 22.5098H25.4475V39.2549Z"
      fill="#FFF"
    />
    <path
      d="M166.594 0L153.65 22.5098H137.316V98H111.869V22.5098H82.7272V0H166.594Z"
      fill="#FFF"
    />
    <path d="M200 0V76.0789L187.055 98H174.553V0H200Z" fill="#FFF" />
  </svg>
);
